-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParRegExp.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pRegExp -> RegExp                           (0)
	%start_pRegExp1 -> RegExp1                         (1)
	%start_pRegExp2 -> RegExp2                         (2)
	%start_pRegExp3 -> RegExp3                         (3)
	Ident -> L_Ident                                   (4)
	RegExp ->                                          (5)
	RegExp -> RegExp '|' RegExp1                       (6)
	RegExp -> RegExp1                                  (7)
	RegExp1 -> RegExp1 RegExp2                         (8)
	RegExp1 -> RegExp2                                 (9)
	RegExp2 -> RegExp2 '*'                             (10)
	RegExp2 -> RegExp3                                 (11)
	RegExp3 -> Ident                                   (12)
	RegExp3 -> '(' RegExp ')'                          (13)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	'*'            { PT _ (TS _ 3) }
	'|'            { PT _ (TS _ 4) }
	L_Ident        { PT _ (TV $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pRegExp  rule  0
	%start_pRegExp1 rule  1
	%start_pRegExp2 rule  2
	%start_pRegExp3 rule  3
	Ident           rule  4
	RegExp          rules 5, 6, 7
	RegExp1         rules 8, 9
	RegExp2         rules 10, 11
	RegExp3         rules 12, 13

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pRegExp -> . RegExp                          (rule 0)

	'('            shift, and enter state 8
	'|'            reduce using rule 5
	L_Ident        shift, and enter state 5
	%eof           reduce using rule 5

	Ident          goto state 6
	RegExp         goto state 13
	RegExp1        goto state 14
	RegExp2        goto state 12
	RegExp3        goto state 10

State 1

	%start_pRegExp1 -> . RegExp1                        (rule 1)

	'('            shift, and enter state 8
	L_Ident        shift, and enter state 5

	Ident          goto state 6
	RegExp1        goto state 11
	RegExp2        goto state 12
	RegExp3        goto state 10

State 2

	%start_pRegExp2 -> . RegExp2                        (rule 2)

	'('            shift, and enter state 8
	L_Ident        shift, and enter state 5

	Ident          goto state 6
	RegExp2        goto state 9
	RegExp3        goto state 10

State 3

	%start_pRegExp3 -> . RegExp3                        (rule 3)

	'('            shift, and enter state 8
	L_Ident        shift, and enter state 5

	Ident          goto state 6
	RegExp3        goto state 7

State 4

	Ident -> . L_Ident                                  (rule 4)

	L_Ident        shift, and enter state 5


State 5

	Ident -> L_Ident .                                  (rule 4)

	'('            reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'|'            reduce using rule 4
	L_Ident        reduce using rule 4
	%eof           reduce using rule 4


State 6

	RegExp3 -> Ident .                                  (rule 12)

	'('            reduce using rule 12
	')'            reduce using rule 12
	'*'            reduce using rule 12
	'|'            reduce using rule 12
	L_Ident        reduce using rule 12
	%eof           reduce using rule 12


State 7

	%start_pRegExp3 -> RegExp3 .                        (rule 3)

	%eof           accept


State 8

	RegExp3 -> '(' . RegExp ')'                         (rule 13)

	'('            shift, and enter state 8
	')'            reduce using rule 5
	'|'            reduce using rule 5
	L_Ident        shift, and enter state 5

	Ident          goto state 6
	RegExp         goto state 18
	RegExp1        goto state 14
	RegExp2        goto state 12
	RegExp3        goto state 10

State 9

	%start_pRegExp2 -> RegExp2 .                        (rule 2)
	RegExp2 -> RegExp2 . '*'                            (rule 10)

	'*'            shift, and enter state 17
	%eof           accept


State 10

	RegExp2 -> RegExp3 .                                (rule 11)

	'('            reduce using rule 11
	')'            reduce using rule 11
	'*'            reduce using rule 11
	'|'            reduce using rule 11
	L_Ident        reduce using rule 11
	%eof           reduce using rule 11


State 11

	%start_pRegExp1 -> RegExp1 .                        (rule 1)
	RegExp1 -> RegExp1 . RegExp2                        (rule 8)

	'('            shift, and enter state 8
	L_Ident        shift, and enter state 5
	%eof           accept

	Ident          goto state 6
	RegExp2        goto state 15
	RegExp3        goto state 10

State 12

	RegExp1 -> RegExp2 .                                (rule 9)
	RegExp2 -> RegExp2 . '*'                            (rule 10)

	'('            reduce using rule 9
	')'            reduce using rule 9
	'*'            shift, and enter state 17
	'|'            reduce using rule 9
	L_Ident        reduce using rule 9
	%eof           reduce using rule 9


State 13

	%start_pRegExp -> RegExp .                          (rule 0)
	RegExp -> RegExp . '|' RegExp1                      (rule 6)

	'|'            shift, and enter state 16
	%eof           accept


State 14

	RegExp -> RegExp1 .                                 (rule 7)
	RegExp1 -> RegExp1 . RegExp2                        (rule 8)

	'('            shift, and enter state 8
	')'            reduce using rule 7
	'|'            reduce using rule 7
	L_Ident        shift, and enter state 5
	%eof           reduce using rule 7

	Ident          goto state 6
	RegExp2        goto state 15
	RegExp3        goto state 10

State 15

	RegExp1 -> RegExp1 RegExp2 .                        (rule 8)
	RegExp2 -> RegExp2 . '*'                            (rule 10)

	'('            reduce using rule 8
	')'            reduce using rule 8
	'*'            shift, and enter state 17
	'|'            reduce using rule 8
	L_Ident        reduce using rule 8
	%eof           reduce using rule 8


State 16

	RegExp -> RegExp '|' . RegExp1                      (rule 6)

	'('            shift, and enter state 8
	L_Ident        shift, and enter state 5

	Ident          goto state 6
	RegExp1        goto state 20
	RegExp2        goto state 12
	RegExp3        goto state 10

State 17

	RegExp2 -> RegExp2 '*' .                            (rule 10)

	'('            reduce using rule 10
	')'            reduce using rule 10
	'*'            reduce using rule 10
	'|'            reduce using rule 10
	L_Ident        reduce using rule 10
	%eof           reduce using rule 10


State 18

	RegExp -> RegExp . '|' RegExp1                      (rule 6)
	RegExp3 -> '(' RegExp . ')'                         (rule 13)

	')'            shift, and enter state 19
	'|'            shift, and enter state 16


State 19

	RegExp3 -> '(' RegExp ')' .                         (rule 13)

	'('            reduce using rule 13
	')'            reduce using rule 13
	'*'            reduce using rule 13
	'|'            reduce using rule 13
	L_Ident        reduce using rule 13
	%eof           reduce using rule 13


State 20

	RegExp -> RegExp '|' RegExp1 .                      (rule 6)
	RegExp1 -> RegExp1 . RegExp2                        (rule 8)

	'('            shift, and enter state 8
	')'            reduce using rule 6
	'|'            reduce using rule 6
	L_Ident        shift, and enter state 5
	%eof           reduce using rule 6

	Ident          goto state 6
	RegExp2        goto state 15
	RegExp3        goto state 10

-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 14
Number of terminals: 5
Number of non-terminals: 9
Number of states: 21
